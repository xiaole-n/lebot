x = {
    ajax: function (url, data, success, fail, showLoad, dataType = 'json') {
        var loading = layer.load(2);
        jQuery.ajax({
            url: url,
            data: data,
            type: (data === null || data === undefined) ? 'get' : 'post',
            cache: false,
            // dataType: dataType,
            success: function (data) {
                x.close(loading);
                if (typeof (success) === 'function') {
                    success(data)
                }
            },
            error: function (data) {
                x.close(loading);
                if (typeof (fail) === 'function') {
                    fail(data)
                } else {
                    x.notify('网络链接错误', 'danger');
                }
            }
        })
    },
    postData: function (url, parameter, callback, callerror, ajaxType, ajaxTime) {
        ajaxType = ajaxType || "POST";
        ajaxTime = ajaxTime || 60000;
        var loading = layer.load(2);
        $.ajax({
            type: ajaxType,
            url: url,
            async: true,
            dataType: 'json',
            timeout: ajaxTime,
            data: parameter,
            success: function (data) {
                x.close(loading);
                if (callback == null) {
                    return;
                }
                callback(data);
            },
            error: function (error) {
                x.close(loading);
                x.notify('网络链接错误', 'danger');
            }
        });
    },
    getval: function (b, a) {
        if ($(b).length == 0) {
            return ""
        }
        if (a === null) {
            $(b).val("");
            return
        } else {
            if (!$(b).val()) {
                if (a === 1) {
                    $(b).focus()
                } else {
                    if (a) {
                        $(b).focus();
                        x.notify(a, 'danger')
                    }
                }
                return ""
            }
            return $(b).val()
        }
    },
    notify: function (message, type = 'info', align = 'right') {
        switch (type) {
            case 'info':
                icon = 'fa fa-info me-1';
                break;
            case 'success':
                icon = 'fa fa-check me-1';
                break;
            case 'warning':
                icon = 'fa fa-exclamation-triangle me-1';
                break;
            case 'danger':
                icon = 'fa fa-times me-1';
                break;
        }
        Codebase.helpers('jq-notify', {
            align: align,             // 'right', 'left', 'center'
            from: 'top',                // 'top', 'bottom'
            type: type,               // 'info', 'success', 'warning', 'danger'
            icon: icon,    // Icon class
            message: message,
            z_index: 39891015
        });
    },
    pjax: function (url) {
        $.pjax({
            url: url,
            container: '#pjax-container',
            scrollTo: false,
            timeout: 20000,
        });
    },
    reload: function () {
        $("#nav-main a").each(function () {
            var pageUrl = window.location.href.split(/[?#]/)[0];
            if (this.href == pageUrl) {
                $(this).parent().parent().parent().addClass("open");
                $(this).addClass("active");
            } else {
                $(this).removeClass("active");
            }
        });
    },
    cleartime: function () {
        typeof saomaInterID != "undefined" && clearInterval(saomaInterID)
    },
    close: function (a) {
        if (typeof (a) === "number") {
            layer.close(a)
        } else {
            if (a) {
                layer.closeAll(a)
            } else {
                layer.closeAll()
            }
        }
    },
    btn: function (d, a) {
        var e;
        if (d) {
            e = d;
        } else {
            e = 'NULL';
        }
        return layer.confirm(e, {
            btn: a || '我知道了',
            closeBtn: 0,
            btnAlign: "c",
            yes: function (b) {
                x.close(b)
            }
        })
    },
    del: function (c, g, b, a) {
        var a = nv(a, "您确定要删除吗?");
        layer.confirm(a, {
            btn: ["确 定", "取 消"]
        }, function (d) {
            x.close(d)
            x.postData(c, g, b)
        })
    },
    ints: function (b, e, a) {
        e = nv(e, 11);
        var d = $(b).val();
        var c = event.which;
        if (a) {
            if (c == 46) {
                if (d.length < 1 || d.indexOf(".") > 0) {
                    return false
                } else {
                    return true
                }
            }
        }
        if (c >= 48 && c <= 57) {
            if (d.length < e) {
                return true
            }
        }
        return false
    }, mode: function (url, parameter, bt, se) {
        se ? eval(se) : $("#modal").modal("show");
        var bt = bt || '标题文本';
        var url = url;
        get_url(url, parameter, bt);
    },

}

function trim(a) {
    return a.replace(/(^\s*)|(\s*$)/g, "")
}

function isnull(a) {
    if (a == null || a == "" || a == "undefined" || a == undefined || a == false || a == "false" || a == "null") {
        return true
    }
    return false
}

function nv(b, a) {
    return (isnull(b)) ? (!isnull(a) ? a : "") : b
}

$.fn.parseForm = function () {
    var serializeObj = {};
    var array = this.serializeArray();
    var str = this.serialize();
    $(array).each(function () {
        if (serializeObj[this.name]) {
            if ($.isArray(serializeObj[this.name])) {
                serializeObj[this.name].push(this.value);
            } else {
                serializeObj[this.name] = [serializeObj[this.name], this.value];
            }
        } else {
            serializeObj[this.name] = this.value;
        }
    });
    return serializeObj;
};

/*** 模态窗口调用 ***/
function get_url(url, parameter, bt) {
    $("#modal-title").html(bt);
    $("#modal-content").html("<div class=\"text-center mb-4\"><i class=\"far fa-2x fa-sun fa-spin\"></i></div>")
    console.log(parameter)
    x.postData(
        url, parameter, function (d) {
            $("#modal-content").html(d.content);
            return false
        }, function (d) {
            $("#modal-content").html("<p style='text-align: center;margin:20px auto;'><b>加载失败，请稍后重试！</b></p>")
            return false
        }, 'POST'
    );
}

$(document).pjax('[data-pjax] a, a[data-pjax]', '#pjax-container', {
    type: 'get',
    scrollTo: false,
    timeout: 20000,
});
$(document).on('pjax:send', function () {
    NProgress.start();
});
$(document).on('pjax:complete', function () {
    if (window.innerWidth <= 991) {
        Codebase.layout('sidebar_close');
    }
    NProgress.done();
    x.reload();
});

x.reload();

function logout() {
    layer.confirm('你确定退出登录吗?', {
        btn: ['确定', '取消'],
        closeBtn: 0,
    }, function () {
        x.ajax("/index/login_ajax/logout", null, function (data) {
            if (data.code === 1) {
                x.notify('退出成功', 'success');
                layer.closeAll();
                setTimeout(function () {
                    window.location.href = "{:url('/index/login/login')}";
                }, 1500);
            }
        });
    });
}

function clearCache()
{
    x.ajax('/index/ajax/clearCache', null, function (data) {
        if (data.code == 1) {
            x.notify(data.message, 'success');
            setTimeout(function () {
                window.location.reload();
            }, 1000)
        }
    })
}

var clipboard = new ClipboardJS('.copy');
clipboard.on('success', function (e) {
    x.notify("复制成功", "success");
});
clipboard.on('error', function (e) {
    document.querySelector('.copy');
    x.notify("复制失败", "warning");
});

function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+d.toUTCString();
    document.cookie = cname + "=" + cvalue + "; " + expires;
}
//获取cookie
function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1);
        if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
    }
    return "";
}
//清除cookie
function clearCookie(name) {
    setCookie(name, "", -1);
}
function checkCookie() {
    var user = getCookie("username");
    if (user != "") {
        alert("Welcome again " + user);
    } else {
        user = prompt("Please enter your name:", "");
        if (user != "" && user != null) {
            setCookie("username", user, 365);
        }
    }
}